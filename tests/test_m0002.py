import pytest

from rga_whisperer.message_types import *


def test_browse_request_parse_empty():
    data = \
        b"\x00\x00\x00\x30" \
        b"\x00\x00\x00\x01" \
        b"\x00\x00\x00\x00" \
        b"\x00\x02\x02\x00" \
        b"\x00\x00\x00\x00" \
        b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02" \
        b"\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x38\x00\x00\x00\x00\x00"

    msg = parse_message(data)

    assert isinstance(msg, BrowseRequestMessage)
    assert msg.header.id == 1
    assert msg.header.object_ref == 0
    assert msg.item_name == ''
    assert msg.request_type == 2


def test_browse_request_pack_empty():
    msg = BrowseRequestMessage(
        header=Message.MessageHeader(id=1),
        item_name='',
        request_type=2
    )
    data = msg.pack()

    assert data[0:4] == b"\x00\x00\x00\x30", "message length specifier incorrect"
    assert data[4:8] == b"\x00\x00\x00\x01", "message id specifier incorrect"
    assert data[8:12] == b"\x00\x00\x00\x00", "message object reference incorrect"
    assert data[12:16] == b"\x00\x02\x02\x00", "message type code incorrect"
    assert data[16:20] == b"\x00\x00\x00\x00", "message contents incorrect"
    assert data[20:32] == b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02", "message request type incorrect"


def test_browse_request_parse_full():
    data = \
        b"\x00\x00\x00\x48" \
        b"\x00\x00\x00\x53" \
        b"\x00\x00\x00\x00" \
        b"\x00\x02\x02\x00" \
        b"\x00\x00\x00\x18\x43\x68\x61\x6e\x6e\x65\x6c\x73\x2e\x50\x61\x72"\
        b"\x61\x6d\x65\x74\x65\x72\x73\x2e\x4d\x61\x73\x73"\
        b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03"\
        b"\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x74\x00\x00\x00\x00\x00"

    msg = parse_message(data)

    assert isinstance(msg, BrowseRequestMessage)
    assert msg.header.id == 83
    assert msg.header.object_ref == 0
    assert msg.item_name == 'Channels.Parameters.Mass'
    assert msg.request_type == 3


def test_browse_request_pack_full():
    msg = BrowseRequestMessage(
        header=Message.MessageHeader(id=83),
        item_name='Channels.Parameters.Mass',
        request_type=3
    )
    data = msg.pack()

    assert data[0:4] == b"\x00\x00\x00\x48", "message length specifier incorrect"
    assert data[4:8] == b"\x00\x00\x00\x53", "message id specifier incorrect"
    assert data[8:12] == b"\x00\x00\x00\x00", "message object reference incorrect"
    assert data[12:16] == b"\x00\x02\x02\x00", "message type code incorrect"
    assert data[16:44] == b"\x00\x00\x00\x18\x43\x68\x61\x6e\x6e\x65\x6c\x73\x2e\x50\x61\x72\x61\x6d\x65\x74\x65\x72\x73\x2e\x4d\x61\x73\x73", "message contents incorrect"
    assert data[44:56] == b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03", "message request type incorrect"


def test_browse_response_parse_empty():
    data = \
        b"\x00\x00\x00\x20" \
        b"\x00\x00\x00\x52" \
        b"\x00\x00\x00\x00" \
        b"\x00\x02\x02\x01" \
        b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff" \
        b"\x00\x00\x00\x00"

    msg = parse_message(data)
    print(msg)

    assert isinstance(msg, BrowseResponseMessage)
    assert msg.header.id == 82
    assert msg.header.object_ref == 0
    assert msg.items == []

# TODO :
# def test_browse_response_pack_empty():


def test_browse_response_parse_single_level():
    data = \
        b"\x00\x00\x01\x68" \
        b"\x00\x00\x00\x50" \
        b"\x00\x00\x00\x00" \
        b"\x00\x02\x02\x01" \
        b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff" \
        b"\x00\x00\x00\x06" \
        b"\x00\x00\x00\x04\x4d\x61\x73\x73\x00\x00\x00\x18\x43\x68\x61\x6e" \
        b"\x6e\x65\x6c\x73\x2e\x50\x61\x72\x61\x6d\x65\x74\x65\x72\x73\x2e" \
        b"\x4d\x61\x73\x73\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00" \
        b"\x00\x00\x00\x09\x41\x6d\x70\x6c\x69\x66\x69\x65\x72\x00\x00\x00" \
        b"\x00\x00\x00\x1d\x43\x68\x61\x6e\x6e\x65\x6c\x73\x2e\x50\x61\x72" \
        b"\x61\x6d\x65\x74\x65\x72\x73\x2e\x41\x6d\x70\x6c\x69\x66\x69\x65" \
        b"\x72\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00" \
        b"\x00\x00\x00\x07\x47\x65\x6e\x65\x72\x61\x6c\x00\x00\x00\x00\x1b" \
        b"\x43\x68\x61\x6e\x6e\x65\x6c\x73\x2e\x50\x61\x72\x61\x6d\x65\x74" \
        b"\x65\x72\x73\x2e\x47\x65\x6e\x65\x72\x61\x6c\x00\x00\x00\x00\x01" \
        b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x06\x4f\x75\x74\x70" \
        b"\x75\x74\x00\x00\x00\x00\x00\x1a\x43\x68\x61\x6e\x6e\x65\x6c\x73" \
        b"\x2e\x50\x61\x72\x61\x6d\x65\x74\x65\x72\x73\x2e\x4f\x75\x74\x70" \
        b"\x75\x74\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00" \
        b"\x00\x00\x00\x08\x44\x65\x74\x65\x63\x74\x6f\x72\x00\x00\x00\x1c" \
        b"\x43\x68\x61\x6e\x6e\x65\x6c\x73\x2e\x50\x61\x72\x61\x6d\x65\x74" \
        b"\x65\x72\x73\x2e\x44\x65\x74\x65\x63\x74\x6f\x72\x00\x00\x00\x01" \
        b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x54\x72\x69\x70" \
        b"\x00\x00\x00\x18\x43\x68\x61\x6e\x6e\x65\x6c\x73\x2e\x50\x61\x72" \
        b"\x61\x6d\x65\x74\x65\x72\x73\x2e\x54\x72\x69\x70\x00\x00\x00\x01" \
        b"\x00\x00\x00\x00\x00\x00\x00\x00"

    msg = parse_message(data)

    assert isinstance(msg, BrowseResponseMessage)
    assert msg.header.id == 80
    assert msg.header.object_ref == 0
    assert len(msg.items) == 6
    item = msg.items[0]
    assert isinstance(item, BrowseResponseMessage.BrowseItems)
    assert item.short_name == 'Mass'
    assert item.full_name == 'Channels.Parameters.Mass'
    assert item.item_type == 1
    assert item.subitems == []


def test_browse_response_parse_full():
    data = \
        b"\x00\x00\x0c\xb2" \
        b"\x00\x00\x00\x53" \
        b"\x00\x00\x00\x00" \
        b"\x00\x02\x02\x01" \
        b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
        b"\x00\x00\x00\x07" \
        b"\x00\x00\x00\x08\x4d\x61\x73\x73\x4d\x6f\x64\x65\x00\x00\x00\x21" \
        b"\x43\x68\x61\x6e\x6e\x65\x6c\x73\x2e\x50\x61\x72\x61\x6d\x65\x74" \
        b"\x65\x72\x73\x2e\x4d\x61\x73\x73\x2e\x4d\x61\x73\x73\x4d\x6f\x64" \
        b"\x65\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x07" \
        b"\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x01\x00\x00\x00\x08" \
        b"\x64\x61\x74\x61\x54\x79\x70\x65\x00\x00\x00\x00\x00\x00\x00\x17" \
        b"\x49\x74\x65\x6d\x20\x43\x61\x6e\x6f\x6e\x69\x63\x61\x6c\x20\x44" \
        b"\x61\x74\x61\x54\x79\x70\x65\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
        b"\x20\x11\x00\x00\x00\x00\x00\x02\x00\x00\x00\x05\x76\x61\x6c\x75" \
        b"\x65\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0a\x49\x74\x65\x6d" \
        b"\x20\x56\x61\x6c\x75\x65\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00" \
        b"\x00\x00\x00\x03\x00\x00\x00\x07\x71\x75\x61\x6c\x69\x74\x79\x00" \
        b"\x00\x00\x00\x00\x00\x00\x00\x0c\x49\x74\x65\x6d\x20\x51\x75\x61" \
        b"\x6c\x69\x74\x79\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00" \
        b"\x00\x00\x00\x04\x00\x00\x00\x09\x74\x69\x6d\x65\x73\x74\x61\x6d" \
        b"\x70\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0e\x49\x74\x65\x6d" \
        b"\x20\x54\x69\x6d\x65\x73\x74\x61\x6d\x70\x00\x00\x00\x00\x00\x00" \
        b"\x00\x03\x00\x00\x00\x00\x00\x05\x00\x00\x00\x0c\x61\x63\x63\x65" \
        b"\x73\x73\x52\x69\x67\x68\x74\x73\x00\x00\x00\x00\x00\x00\x00\x12" \
        b"\x49\x74\x65\x6d\x20\x41\x63\x63\x65\x73\x73\x20\x52\x69\x67\x68" \
        b"\x74\x73\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x06" \
        b"\x00\x00\x00\x08\x73\x63\x61\x6e\x52\x61\x74\x65\x00\x00\x00\x00" \
        b"\x00\x00\x00\x10\x53\x65\x72\x76\x65\x72\x20\x53\x63\x61\x6e\x20" \
        b"\x52\x61\x74\x65\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00" \
        b"\x00\x00\x13\x89\x00\x00\x00\x04\x54\x79\x70\x65\x00\x00\x00\x26" \
        b"\x43\x68\x61\x6e\x6e\x65\x6c\x73\x2e\x50\x61\x72\x61\x6d\x65\x74" \
        b"\x65\x72\x73\x2e\x4d\x61\x73\x73\x2e\x4d\x61\x73\x73\x4d\x6f\x64" \
        b"\x65\x23\x35\x30\x30\x31\x00\x00\x00\x00\x00\x04\x54\x79\x70\x65" \
        b"\x00\x00\x00\x00\x00\x00\x00\x18\x44\x69\x67\x69\x74\x61\x6c\x46" \
        b"\x49\x52\x57\x65\x69\x67\x68\x74\x46\x75\x6e\x63\x74\x69\x6f\x6e" \
        b"\x00\x00\x00\x31\x43\x68\x61\x6e\x6e\x65\x6c\x73\x2e\x50\x61\x72" \
        b"\x61\x6d\x65\x74\x65\x72\x73\x2e\x4d\x61\x73\x73\x2e\x44\x69\x67" \
        b"\x69\x74\x61\x6c\x46\x49\x52\x57\x65\x69\x67\x68\x74\x46\x75\x6e" \
        b"\x63\x74\x69\x6f\x6e\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00" \
        b"\x00\x00\x00\x07\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x01" \
        b"\x00\x00\x00\x08\x64\x61\x74\x61\x54\x79\x70\x65\x00\x00\x00\x00" \
        b"\x00\x00\x00\x17\x49\x74\x65\x6d\x20\x43\x61\x6e\x6f\x6e\x69\x63" \
        b"\x61\x6c\x20\x44\x61\x74\x61\x54\x79\x70\x65\x00\x00\x00\x00\x00" \
        b"\x00\x00\x00\x00\x20\x11\x00\x00\x00\x00\x00\x02\x00\x00\x00\x05" \
        b"\x76\x61\x6c\x75\x65\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0a" \
        b"\x49\x74\x65\x6d\x20\x56\x61\x6c\x75\x65\x00\x00\x00\x00\x00\x00" \
        b"\x00\x02\x00\x00\x00\x00\x00\x03\x00\x00\x00\x07\x71\x75\x61\x6c" \
        b"\x69\x74\x79\x00\x00\x00\x00\x00\x00\x00\x00\x0c\x49\x74\x65\x6d" \
        b"\x20\x51\x75\x61\x6c\x69\x74\x79\x00\x00\x00\x00\x00\x00\x00\x00" \
        b"\x00\x07\x00\x00\x00\x00\x00\x04\x00\x00\x00\x09\x74\x69\x6d\x65" \
        b"\x73\x74\x61\x6d\x70\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0e" \
        b"\x49\x74\x65\x6d\x20\x54\x69\x6d\x65\x73\x74\x61\x6d\x70\x00\x00" \
        b"\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x05\x00\x00\x00\x0c" \
        b"\x61\x63\x63\x65\x73\x73\x52\x69\x67\x68\x74\x73\x00\x00\x00\x00" \
        b"\x00\x00\x00\x12\x49\x74\x65\x6d\x20\x41\x63\x63\x65\x73\x73\x20" \
        b"\x52\x69\x67\x68\x74\x73\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00" \
        b"\x00\x00\x00\x06\x00\x00\x00\x08\x73\x63\x61\x6e\x52\x61\x74\x65" \
        b"\x00\x00\x00\x00\x00\x00\x00\x10\x53\x65\x72\x76\x65\x72\x20\x53" \
        b"\x63\x61\x6e\x20\x52\x61\x74\x65\x00\x00\x00\x00\x00\x00\x00\x00" \
        b"\x00\x08\x00\x00\x00\x00\x13\x89\x00\x00\x00\x04\x54\x79\x70\x65" \
        b"\x00\x00\x00\x36\x43\x68\x61\x6e\x6e\x65\x6c\x73\x2e\x50\x61\x72" \
        b"\x61\x6d\x65\x74\x65\x72\x73\x2e\x4d\x61\x73\x73\x2e\x44\x69\x67" \
        b"\x69\x74\x61\x6c\x46\x49\x52\x57\x65\x69\x67\x68\x74\x46\x75\x6e" \
        b"\x63\x74\x69\x6f\x6e\x23\x35\x30\x30\x31\x00\x00\x00\x00\x00\x04" \
        b"\x54\x79\x70\x65\x00\x00\x00\x00\x00\x00\x00\x0a\x44\x77\x65\x6c" \
        b"\x6c\x53\x70\x65\x65\x64\x00\x00\x00\x00\x00\x23\x43\x68\x61\x6e" \
        b"\x6e\x65\x6c\x73\x2e\x50\x61\x72\x61\x6d\x65\x74\x65\x72\x73\x2e" \
        b"\x4d\x61\x73\x73\x2e\x44\x77\x65\x6c\x6c\x53\x70\x65\x65\x64\x00" \
        b"\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00\x00\x00" \
        b"\x00\x02\x00\x00\x00\x00\x00\x01\x00\x00\x00\x08\x64\x61\x74\x61" \
        b"\x54\x79\x70\x65\x00\x00\x00\x00\x00\x00\x00\x17\x49\x74\x65\x6d" \
        b"\x20\x43\x61\x6e\x6f\x6e\x69\x63\x61\x6c\x20\x44\x61\x74\x61\x54" \
        b"\x79\x70\x65\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x11\x00\x00" \
        b"\x00\x00\x00\x02\x00\x00\x00\x05\x76\x61\x6c\x75\x65\x00\x00\x00" \
        b"\x00\x00\x00\x00\x00\x00\x00\x0a\x49\x74\x65\x6d\x20\x56\x61\x6c" \
        b"\x75\x65\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x03" \
        b"\x00\x00\x00\x07\x71\x75\x61\x6c\x69\x74\x79\x00\x00\x00\x00\x00" \
        b"\x00\x00\x00\x0c\x49\x74\x65\x6d\x20\x51\x75\x61\x6c\x69\x74\x79" \
        b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00\x00\x00\x00\x04" \
        b"\x00\x00\x00\x09\x74\x69\x6d\x65\x73\x74\x61\x6d\x70\x00\x00\x00" \
        b"\x00\x00\x00\x00\x00\x00\x00\x0e\x49\x74\x65\x6d\x20\x54\x69\x6d" \
        b"\x65\x73\x74\x61\x6d\x70\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00" \
        b"\x00\x00\x00\x05\x00\x00\x00\x0c\x61\x63\x63\x65\x73\x73\x52\x69" \
        b"\x67\x68\x74\x73\x00\x00\x00\x00\x00\x00\x00\x12\x49\x74\x65\x6d" \
        b"\x20\x41\x63\x63\x65\x73\x73\x20\x52\x69\x67\x68\x74\x73\x00\x00" \
        b"\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x06\x00\x00\x00\x08" \
        b"\x73\x63\x61\x6e\x52\x61\x74\x65\x00\x00\x00\x00\x00\x00\x00\x10" \
        b"\x53\x65\x72\x76\x65\x72\x20\x53\x63\x61\x6e\x20\x52\x61\x74\x65" \
        b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x00\x13\x89" \
        b"\x00\x00\x00\x04\x54\x79\x70\x65\x00\x00\x00\x28\x43\x68\x61\x6e" \
        b"\x6e\x65\x6c\x73\x2e\x50\x61\x72\x61\x6d\x65\x74\x65\x72\x73\x2e" \
        b"\x4d\x61\x73\x73\x2e\x44\x77\x65\x6c\x6c\x53\x70\x65\x65\x64\x23" \
        b"\x35\x30\x30\x31\x00\x00\x00\x04\x54\x79\x70\x65\x00\x00\x00\x00" \
        b"\x00\x00\x00\x09\x46\x69\x72\x73\x74\x4d\x61\x73\x73\x00\x00\x00" \
        b"\x00\x00\x00\x22" \
        b"\x43\x68\x61\x6e\x6e\x65\x6c\x73\x2e\x50\x61\x72\x61\x6d\x65\x74" \
        b"\x65\x72\x73\x2e\x4d\x61\x73\x73\x2e\x46\x69\x72\x73\x74\x4d\x61" \
        b"\x73\x73\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x07" \
        b"\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x01\x00\x00\x00\x08" \
        b"\x64\x61\x74\x61\x54\x79\x70\x65\x00\x00\x00\x00\x00\x00\x00\x17" \
        b"\x49\x74\x65\x6d\x20\x43\x61\x6e\x6f\x6e\x69\x63\x61\x6c\x20\x44" \
        b"\x61\x74\x61\x54\x79\x70\x65\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
        b"\x20\x04\x00\x00\x00\x00\x00\x02\x00\x00\x00\x05\x76\x61\x6c\x75" \
        b"\x65\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0a\x49\x74\x65\x6d" \
        b"\x20\x56\x61\x6c\x75\x65\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00" \
        b"\x00\x00\x00\x03\x00\x00\x00\x07\x71\x75\x61\x6c\x69\x74\x79\x00" \
        b"\x00\x00\x00\x00\x00\x00\x00\x0c\x49\x74\x65\x6d\x20\x51\x75\x61" \
        b"\x6c\x69\x74\x79\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00" \
        b"\x00\x00\x00\x04\x00\x00\x00\x09\x74\x69\x6d\x65\x73\x74\x61\x6d" \
        b"\x70\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0e\x49\x74\x65\x6d" \
        b"\x20\x54\x69\x6d\x65\x73\x74\x61\x6d\x70\x00\x00\x00\x00\x00\x00" \
        b"\x00\x03\x00\x00\x00\x00\x00\x05\x00\x00\x00\x0c\x61\x63\x63\x65" \
        b"\x73\x73\x52\x69\x67\x68\x74\x73\x00\x00\x00\x00\x00\x00\x00\x12" \
        b"\x49\x74\x65\x6d\x20\x41\x63\x63\x65\x73\x73\x20\x52\x69\x67\x68" \
        b"\x74\x73\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x06" \
        b"\x00\x00\x00\x08\x73\x63\x61\x6e\x52\x61\x74\x65\x00\x00\x00\x00" \
        b"\x00\x00\x00\x10\x53\x65\x72\x76\x65\x72\x20\x53\x63\x61\x6e\x20" \
        b"\x52\x61\x74\x65\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00" \
        b"\x00\x00\x13\x89\x00\x00\x00\x04\x54\x79\x70\x65\x00\x00\x00\x27" \
        b"\x43\x68\x61\x6e\x6e\x65\x6c\x73\x2e\x50\x61\x72\x61\x6d\x65\x74" \
        b"\x65\x72\x73\x2e\x4d\x61\x73\x73\x2e\x46\x69\x72\x73\x74\x4d\x61" \
        b"\x73\x73\x23\x35\x30\x30\x31\x00\x00\x00\x00\x04\x54\x79\x70\x65" \
        b"\x00\x00\x00\x00\x00\x00\x00\x05\x57\x69\x64\x74\x68\x00\x00\x00" \
        b"\x00\x00\x00\x1e\x43\x68\x61\x6e\x6e\x65\x6c\x73\x2e\x50\x61\x72" \
        b"\x61\x6d\x65\x74\x65\x72\x73\x2e\x4d\x61\x73\x73\x2e\x57\x69\x64" \
        b"\x74\x68\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x07" \
        b"\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x01\x00\x00\x00\x08" \
        b"\x64\x61\x74\x61\x54\x79\x70\x65\x00\x00\x00\x00\x00\x00\x00\x17" \
        b"\x49\x74\x65\x6d\x20\x43\x61\x6e\x6f\x6e\x69\x63\x61\x6c\x20\x44" \
        b"\x61\x74\x61\x54\x79\x70\x65\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
        b"\x20\x04\x00\x00\x00\x00\x00\x02\x00\x00\x00\x05\x76\x61\x6c\x75" \
        b"\x65\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0a\x49\x74\x65\x6d" \
        b"\x20\x56\x61\x6c\x75\x65\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00" \
        b"\x00\x00\x00\x03\x00\x00\x00\x07\x71\x75\x61\x6c\x69\x74\x79\x00" \
        b"\x00\x00\x00\x00\x00\x00\x00\x0c\x49\x74\x65\x6d\x20\x51\x75\x61" \
        b"\x6c\x69\x74\x79\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00" \
        b"\x00\x00\x00\x04\x00\x00\x00\x09\x74\x69\x6d\x65\x73\x74\x61\x6d" \
        b"\x70\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0e\x49\x74\x65\x6d" \
        b"\x20\x54\x69\x6d\x65\x73\x74\x61\x6d\x70\x00\x00\x00\x00\x00\x00" \
        b"\x00\x03\x00\x00\x00\x00\x00\x05\x00\x00\x00\x0c\x61\x63\x63\x65" \
        b"\x73\x73\x52\x69\x67\x68\x74\x73\x00\x00\x00\x00\x00\x00\x00\x12" \
        b"\x49\x74\x65\x6d\x20\x41\x63\x63\x65\x73\x73\x20\x52\x69\x67\x68" \
        b"\x74\x73\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x06" \
        b"\x00\x00\x00\x08\x73\x63\x61\x6e\x52\x61\x74\x65\x00\x00\x00\x00" \
        b"\x00\x00\x00\x10\x53\x65\x72\x76\x65\x72\x20\x53\x63\x61\x6e\x20" \
        b"\x52\x61\x74\x65\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00" \
        b"\x00\x00\x13\x89\x00\x00\x00\x04\x54\x79\x70\x65\x00\x00\x00\x23" \
        b"\x43\x68\x61\x6e\x6e\x65\x6c\x73\x2e\x50\x61\x72\x61\x6d\x65\x74" \
        b"\x65\x72\x73\x2e\x4d\x61\x73\x73\x2e\x57\x69\x64\x74\x68\x23\x35" \
        b"\x30\x30\x31\x00\x00\x00\x00\x04\x54\x79\x70\x65\x00\x00\x00\x00" \
        b"\x00\x00\x00\x0a\x52\x65\x73\x6f\x6c\x75\x74\x69\x6f\x6e\x00\x00" \
        b"\x00\x00\x00\x23\x43\x68\x61\x6e\x6e\x65\x6c\x73\x2e\x50\x61\x72" \
        b"\x61\x6d\x65\x74\x65\x72\x73\x2e\x4d\x61\x73\x73\x2e\x52\x65\x73" \
        b"\x6f\x6c\x75\x74\x69\x6f\x6e\x00\x00\x00\x00\x02\x00\x00\x00\x00" \
        b"\x00\x00\x00\x07\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x01" \
        b"\x00\x00\x00\x08\x64\x61\x74\x61\x54\x79\x70\x65\x00\x00\x00\x00" \
        b"\x00\x00\x00\x17\x49\x74\x65\x6d\x20\x43\x61\x6e\x6f\x6e\x69\x63" \
        b"\x61\x6c\x20\x44\x61\x74\x61\x54\x79\x70\x65\x00\x00\x00\x00\x00" \
        b"\x00\x00\x00\x00\x20\x11\x00\x00\x00\x00\x00\x02\x00\x00\x00\x05" \
        b"\x76\x61\x6c\x75\x65\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0a" \
        b"\x49\x74\x65\x6d\x20\x56\x61\x6c\x75\x65\x00\x00\x00\x00\x00\x00" \
        b"\x00\x02\x00\x00\x00\x00\x00\x03\x00\x00\x00\x07\x71\x75\x61\x6c" \
        b"\x69\x74\x79\x00\x00\x00\x00\x00\x00\x00\x00\x0c\x49\x74\x65\x6d" \
        b"\x20\x51\x75\x61\x6c\x69\x74\x79\x00\x00\x00\x00\x00\x00\x00\x00" \
        b"\x00\x07\x00\x00\x00\x00\x00\x04\x00\x00\x00\x09\x74\x69\x6d\x65" \
        b"\x73\x74\x61\x6d\x70\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0e" \
        b"\x49\x74\x65\x6d\x20\x54\x69\x6d\x65\x73\x74\x61\x6d\x70\x00\x00" \
        b"\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x05\x00\x00\x00\x0c" \
        b"\x61\x63\x63\x65\x73\x73\x52\x69\x67\x68\x74\x73\x00\x00\x00\x00" \
        b"\x00\x00\x00\x12\x49\x74\x65\x6d\x20\x41\x63\x63\x65\x73\x73\x20" \
        b"\x52\x69\x67\x68\x74\x73\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00" \
        b"\x00\x00\x00\x06\x00\x00\x00\x08\x73\x63\x61\x6e\x52\x61\x74\x65" \
        b"\x00\x00\x00\x00\x00\x00\x00\x10\x53\x65\x72\x76\x65\x72\x20\x53" \
        b"\x63\x61\x6e\x20\x52\x61\x74\x65\x00\x00\x00\x00\x00\x00\x00\x00" \
        b"\x00\x08\x00\x00\x00\x00\x13\x89\x00\x00\x00\x04\x54\x79\x70\x65" \
        b"\x00\x00\x00\x28\x43\x68\x61\x6e\x6e\x65\x6c\x73\x2e\x50\x61\x72" \
        b"\x61\x6d\x65\x74\x65\x72\x73\x2e\x4d\x61\x73\x73\x2e\x52\x65\x73" \
        b"\x6f\x6c\x75\x74\x69\x6f\x6e\x23\x35\x30\x30\x31\x00\x00\x00\x04" \
        b"\x54\x79\x70\x65\x00\x00\x00\x00\x00\x00\x00\x09\x54\x68\x72\x65" \
        b"\x73\x68\x6f\x6c\x64\x00\x00\x00\x00\x00\x00\x22\x43\x68\x61\x6e" \
        b"\x6e\x65\x6c\x73\x2e\x50\x61\x72\x61\x6d\x65\x74\x65\x72\x73\x2e" \
        b"\x4d\x61\x73\x73\x2e\x54\x68\x72\x65\x73\x68\x6f\x6c\x64\x00\x00" \
        b"\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00\x00\x00" \
        b"\x00\x02\x00\x00\x00\x00\x00\x01\x00\x00\x00\x08\x64\x61\x74\x61" \
        b"\x54\x79\x70\x65\x00\x00\x00\x00\x00\x00\x00\x17\x49\x74\x65\x6d" \
        b"\x20\x43\x61\x6e\x6f\x6e\x69\x63\x61\x6c\x20\x44\x61\x74\x61\x54" \
        b"\x79\x70\x65\x00" \
        b"\x00\x00\x00\x00\x00\x00\x00\x00\x20\x11\x00\x00\x00\x00\x00\x02" \
        b"\x00\x00\x00\x05\x76\x61\x6c\x75\x65\x00\x00\x00\x00\x00\x00\x00" \
        b"\x00\x00\x00\x0a\x49\x74\x65\x6d\x20\x56\x61\x6c\x75\x65\x00\x00" \
        b"\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x03\x00\x00\x00\x07" \
        b"\x71\x75\x61\x6c\x69\x74\x79\x00\x00\x00\x00\x00\x00\x00\x00\x0c" \
        b"\x49\x74\x65\x6d\x20\x51\x75\x61\x6c\x69\x74\x79\x00\x00\x00\x00" \
        b"\x00\x00\x00\x00\x00\x07\x00\x00\x00\x00\x00\x04\x00\x00\x00\x09" \
        b"\x74\x69\x6d\x65\x73\x74\x61\x6d\x70\x00\x00\x00\x00\x00\x00\x00" \
        b"\x00\x00\x00\x0e\x49\x74\x65\x6d\x20\x54\x69\x6d\x65\x73\x74\x61" \
        b"\x6d\x70\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x05" \
        b"\x00\x00\x00\x0c\x61\x63\x63\x65\x73\x73\x52\x69\x67\x68\x74\x73" \
        b"\x00\x00\x00\x00\x00\x00\x00\x12\x49\x74\x65\x6d\x20\x41\x63\x63" \
        b"\x65\x73\x73\x20\x52\x69\x67\x68\x74\x73\x00\x00\x00\x00\x00\x00" \
        b"\x00\x04\x00\x00\x00\x00\x00\x06\x00\x00\x00\x08\x73\x63\x61\x6e" \
        b"\x52\x61\x74\x65\x00\x00\x00\x00\x00\x00\x00\x10\x53\x65\x72\x76" \
        b"\x65\x72\x20\x53\x63\x61\x6e\x20\x52\x61\x74\x65\x00\x00\x00\x00" \
        b"\x00\x00\x00\x00\x00\x08\x00\x00\x00\x00\x13\x89\x00\x00\x00\x04" \
        b"\x54\x79\x70\x65\x00\x00\x00\x27\x43\x68\x61\x6e\x6e\x65\x6c\x73" \
        b"\x2e\x50\x61\x72\x61\x6d\x65\x74\x65\x72\x73\x2e\x4d\x61\x73\x73" \
        b"\x2e\x54\x68\x72\x65\x73\x68\x6f\x6c\x64\x23\x35\x30\x30\x31\x00" \
        b"\x00\x00\x00\x04\x54\x79\x70\x65\x00\x00"

    msg = parse_message(data)

    assert isinstance(msg, BrowseResponseMessage)
    assert msg.header.id == 83
    assert msg.header.object_ref == 0
    assert len(msg.items) == 7
    item = msg.items[0]
    assert isinstance(item, BrowseResponseMessage.BrowseItems)
    assert item.short_name == 'MassMode'
    assert item.full_name == 'Channels.Parameters.Mass.MassMode'
    assert item.item_type == 2
    assert len(item.subitems) == 7
    subitem = item.subitems[0]
    assert isinstance(subitem,
                      BrowseResponseMessage.BrowseItems.BrowseSubItems)
    assert subitem.short_name == 'dataType'
    assert subitem.full_name == 'Item Canonical DataType'
    assert subitem.dtype == 2
    assert subitem.item_id == 1

# TODO :
# def test_browse_response_pack_full():


def test_bind_request_parse():
    data = \
        b"\x00\x00\x00\x4c" \
        b"\x00\x00\x00\xe0" \
        b"\x00\x00\x00\x00" \
        b"\x00\x02\x06\x00" \
        b"\x07\x33\xb6\xb8" \
        b"\x00\x00\x00\x15\x31\x30\x30\x30\x5f\x30\x37\x33\x33\x62\x36\x62\x38\x5f\x36\x37\x33\x38\x31\x30\x39\x01\x01\x00" \
        b"\x00\x00\x03\xe8\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x61\x00" \
        b"\x00\x00\x00\x00\x00\x00\x61\x00\x00\x00\x00\x00"

    msg = parse_message(data)

    assert isinstance(msg, BindRequestMessage)
    assert msg.item_handle == 0x07_33_b6_b8
    assert msg.bind_request == f'1000_{0x07_33_b6_b8:08x}_6738109'


def test_bind_request_pack():
    msg = BindRequestMessage(
        Message.MessageHeader(id=0xe0),
        item_handle=0x07_33_b6_b8,
        bind_request=f"1000_{0x07_33_b6_b8:08x}_6738109"
    )

    data = msg.pack()

    assert data[0:4] == b"\x00\x00\x00\x4c", "message length specifier incorrect"
    assert data[4:8] == b"\x00\x00\x00\xe0", "message id specifier incorrect"
    assert data[8:12] == b"\x00\x00\x00\x00", "message object reference incorrect"
    assert data[12:16] == b"\x00\x02\x06\x00", "message type code incorrect"
    assert data[16:20] == b"\x07\x33\xb6\xb8", "message item handle incorrect"
    assert data[20:45] == b"\x00\x00\x00\x15\x31\x30\x30\x30\x5f\x30\x37\x33\x33\x62\x36\x62\x38\x5f\x36\x37\x33\x38\x31\x30\x39", "message bind request incorrect"


def test_bind_response_parse():
    data = \
        b"\x00\x00\x00\x44" \
        b"\x00\x00\x00\xe0" \
        b"\x00\x00\x00\x00" \
        b"\x00\x02\x06\x01" \
        b"\x00\x00\x00\x00\x00\x27\xb1\xf0\x00\x00\x00\x15\x31\x30\x30\x30" \
        b"\x5f\x30\x37\x33\x33\x62\x36\x62\x38\x5f\x36\x37\x33\x38\x31\x30" \
        b"\x39\x00\x00\x00\x00\x00\x03\xe8\x00\x00\x00\x00\x00\x00\x01\xe0" \
        b"\x00\x00\x00\x00"

    msg = parse_message(data)

    assert isinstance(msg, BindResponseMessage)
    assert msg.item_handle == 0x00_27_b1_f0
    assert msg.bind_request == f'1000_{0x07_33_b6_b8:08x}_6738109'


def test_bind_response_pack():
    msg = BindResponseMessage(
        Message.MessageHeader(id=0xe0),
        item_handle=0x00_27_b1_f0,
        bind_request=f"1000_{0x07_33_b6_b8:08x}_6738109"
    )

    data = msg.pack()

    assert data[0:4] == b"\x00\x00\x00\x44", "message length specifier incorrect"
    assert data[4:8] == b"\x00\x00\x00\xe0", "message id specifier incorrect"
    assert data[8:12] == b"\x00\x00\x00\x00", "message object reference incorrect"
    assert data[12:16] == b"\x00\x02\x06\x01", "message type code incorrect"
    assert data[20:24] == b"\x00\x27\xb1\xf0", "message item handle incorrect"
    assert data[24:49] == b"\x00\x00\x00\x15\x31\x30\x30\x30\x5f\x30\x37\x33\x33\x62\x36\x62\x38\x5f\x36\x37\x33\x38\x31\x30\x39", "message bind request incorrect"


def test_com_initiate_parse():
    data = \
        b"\x00\x00\x00\x2c" \
        b"\x00\x00\x00\x00" \
        b"\x00\x00\x00\x00" \
        b"\x00\x02\x08\x00" \
        b"\x00\x00\x00\x18\x53\x6f\x66\x74\x69\x6e\x67\x5f\x64\x61\x74\x61" \
        b"\x46\x45\x45\x44\x4f\x50\x43\x53\x75\x69\x74\x65"

    msg = parse_message(data)

    assert isinstance(msg, COMInitiateMessage)
    assert msg.connection_name == 'Softing_dataFEEDOPCSuite'


def test_com_initiate_pack():
    msg = COMInitiateMessage(
        Message.MessageHeader(),
        connection_name='Softing_dataFEEDOPCSuite'
    )

    data = \
        b"\x00\x00\x00\x2c" \
        b"\x00\x00\x00\x00" \
        b"\x00\x00\x00\x00" \
        b"\x00\x02\x08\x00" \
        b"\x00\x00\x00\x18\x53\x6f\x66\x74\x69\x6e\x67\x5f\x64\x61\x74\x61" \
        b"\x46\x45\x45\x44\x4f\x50\x43\x53\x75\x69\x74\x65"

    assert msg.pack() == data


def test_com_response_parse():
    data = \
        b"\x00\x00\x00\x14" \
        b"\x00\x00\x00\x00" \
        b"\x00\x00\x00\x00" \
        b"\x00\x02\x08\x01" \
        b"\x80\x00\x40\x01"

    msg = parse_message(data)

    assert isinstance(msg, COMResponseMessage)
    assert msg.data == b"\x80\x00\x40\x01"


def test_com_response_pack():
    msg = COMResponseMessage(
        Message.MessageHeader(),
        data=b"\x80\x00\x40\x01"
    )

    data = \
        b"\x00\x00\x00\x14" \
        b"\x00\x00\x00\x00" \
        b"\x00\x00\x00\x00" \
        b"\x00\x02\x08\x01" \
        b"\x80\x00\x40\x01"

    assert msg.pack() == data


if __name__ == "__main__":
    exit(pytest.main(['-v', __file__]))
